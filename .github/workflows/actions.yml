name: CI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches:
      - develop
      - main
      - master

jobs:
  test:
    runs-on: ubuntu-18.04
    name: Tests with Python

    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements.txt
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Test with pytest
        env:
          CELERY_BROKER_URL: 'redis://redis:6379/0'
          CELERY_FLOWER_PASSWORD: 'celery'
          CELERY_FLOWER_USER: 'celery'
          DATABASE_URL: 'postgres://postgres:postgres@localhost:${{ job.services.postgres.ports[5432] }}/postgres'
          DEBUG: false
          GRID_ENGINE_DELETE_CMD: '/home/runner/work/scc-api/scc-api/src/bin/qdel'
          GRID_ENGINE_STATUS_CMD: '/home/runner/work/scc-api/scc-api/src/bin/qstat'
          GRID_ENGINE_SUBMIT_CMD: '/home/runner/work/scc-api/scc-api/src/bin/qsub'
          MEDIA_ROOT: '/tmp/'
          REDIS_URL: 'redis://redis:6379/0'
          SECRET_KEY: 'this-is-for-testing-only'

        run: |
          python -m pytest src

      - name: Lints Python
        run: |
          black --check .

      - name: Lints HTML templates
        run: |
          djhtml --check src/templates/*.html src/templates/**/*.html

  build-and-push-image:
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    name: Build and Publish Docker image
    needs: [test]
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push our Develop Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/django/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:develop

      # - name: Build and Push our Production Docker Image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     file: ./docker/sge-submit-host/Dockerfile.prod
      #     push: true
      #     tags: |
      #       ghcr.io/${{ github.repository }}:latest
